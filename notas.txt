Separando los posts a un microservicio

-Como habíamos dicho, tener un microservicio para cada cosa no es muy recomendable, por lo que, lo que haremos será
  tener un servicio para la api, una para el cache (sí hay), una para la DB.
-Esto puede tener otro problema, y es que sí tenemos demasiadas entidades dentro de la API, estono suele ser lo
  mejor, porque estamos sirviendo todo desde el mismo sitio.
-Lo que vamos a hacer es dentro de la api, servir microservicios de forma 'horizontal'.
-Siempre es bueno recordar que para separar todo esto, debemos tener clara la estructura que vamos a hacer, y
  que esta tenga sentido.
-Lo que haremos será, en la api, tener los microservicios de user y auth, separado de la api, tendremos los microservicios de la DB,
  y el de los post, que lo haremos en esta clase.

Posts:
  -Creamos la carpeta para ese microservicio, tendrá un index y una carpeta components.
  -Dentro de components, colocaremos completa la carpeta post que teniamos en los components de la API.
  -Al hacer esto, en el index de la API, debemos borrar todo lo que haga referencia a los post.
  -Ahora, en el index del microservicio de post, serviremos el componente post, en la misma ruta, y levantaremos 
    en otro puerto distinto al de los anteriores.

Importante:
  -El store del componente seguirá siendo mysql, y no el microservicio de la DB.
  -Es por esto que se llama 'horizontal', porque ataca directamente a la DB.