Conectando el microservicio a Redis

Redislabs:
  -Como nosotros no tenemos corriendo ningún servidor de redis (son pagos), usaremos Redislabs.
  -Este nos provee un servicio con una DB gratuita para poder realizar nuestras pruebas.
  -Ingresaremos al sitio y vamos a probar gratis.
  -Gratuitamente solo nos dejará tener una DB.
  -Sí ocupamos crear una, será en el menú superior izquierdo.
  -En esta clase lo que probaremos es que se haga correctamente la conexión.

store de redis:
  -Instalamos e importamos redis.
  -Creamos un cliente:
    .Una const tendrá como valor createClient() de redis, y como param. un objeto de conf.
    .Este tiene como minimo: host, port, y password de nuestra DB de redis.
    .Estos los conseguimos entrando a la DB de redis.
    .Estos datos debemos tenerlos dentro de la conf.
  -Crearemos los metodos que habíamos dicho que usaremos.
  -Exportaremos un objeto con esos metodos.

list:
  -Llevará por parametro la tabla. La tabla igualmente la obtendremos de req.params.
  -Retornaremos una promesa.
  -Ejecutamos el metodo get() del cliente, llevara por parametro la tabla y un error first callback, que tiene como 2do
    parametro la data.
  -Sí hubo error, la rechazamos con el error.
  -Resolveremos la promesa con la data, como nos vendrá como string, la pasamos a objeto con JSON.parse().

upsert:
  -Retornaremos una promesa.
  -Ejecutaremos el metodo setex() del cliente, llevará como parametros un key, el tiempo en segundos en que se limpiará
    la cache, y la data (del parametro) convertida a string con JSON.stringify().
  -El key será la tabla, pero sí dentro de la data viene un id, al key le agregamos un '_[data.id]'.
  -Resolveremos con true la promesa.

-Estos metodos son los que ejecuta el microservicio de cache.
-Para probar si funciona, añadimos en cualquier ruta de miscroservicio de cache algun dato (cualquiera), y lo 
  revisaremos con un get, sí este dentro de1 10s lo volvemos a ver, pero ya no tiene info. está funcionando correctamente.

  Contraseña DB redis: SR1sNH4XFMgFbw9356jjV0KVp14QdHWw